<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>RenderForge</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on RenderForge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Sep 2024 18:13:32 +0330</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Barzin Inventory Management System</title>
      <link>http://localhost:1313/posts/barzin-inventory-management-system/</link>
      <pubDate>Mon, 09 Sep 2024 18:13:32 +0330</pubDate>
      <guid>http://localhost:1313/posts/barzin-inventory-management-system/</guid>
      <description>Barzin is a software that I developed in C++ using the Qt library. I aimed to create a modern general inventory management system. For this reason, in parallel with the core capabilities, say adding products with different attributes or registering customers&amp;rsquo; orders, I tried to add some features to this software to make it distinctive from its common counterparts; feature like &amp;ldquo;Dark Mode&amp;rdquo; is one of my favorites among these features that I rarely see in common software in this area.</description>
    </item>
    <item>
      <title>Anahita Render Engine</title>
      <link>http://localhost:1313/posts/anahita-render-engine/</link>
      <pubDate>Mon, 09 Sep 2024 18:02:19 +0330</pubDate>
      <guid>http://localhost:1313/posts/anahita-render-engine/</guid>
      <description>This is a renderer that I have developed for the bachelor&amp;rsquo;s degree project. In the beginning, I used the Blinn-Phong rendering model for it and now I am working on implementing a physically-based rendering model. For controlling the objects in the scene from light sources to complicated mesh objects and for the sake of debugging, I also implemented a GUI using Dear ImGui.
Here you can load meshes to the scene through GUI that under the hood uses the Assimp library and besides that, you can control each object&amp;rsquo;s attributes.</description>
    </item>
    <item>
      <title>My Clone of Retro Zelda in My 2D Game Engine</title>
      <link>http://localhost:1313/posts/my-clone-of-retro-zelda-in-my-2d-game-engine/</link>
      <pubDate>Thu, 05 Sep 2024 17:01:33 +0330</pubDate>
      <guid>http://localhost:1313/posts/my-clone-of-retro-zelda-in-my-2d-game-engine/</guid>
      <description>This is a simple clone of old famous game Legend of Zelda that I have created with my own 2D game engine. I created an ECS 2D game engine using C++ and SFML (as a library for handling graphics and sound). Due to this software architecture, it is easy to create new levels in a script file and then use that file in the game as a level. I didn&amp;rsquo;t pick any specific scripting language for this and it has a simple format for now.</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>You can find some of my personal projects here. Beside that, I am currently looking for a position in the field of computer graphics either in the university or industry. I will be glad to send my resume to you upon your request: ali.rajabi20 [at] yahoo [dot] com</description>
    </item>
  </channel>
</rss>
